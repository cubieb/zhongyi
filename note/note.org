## 开发板的实践手册和笔记

- 开发板用的核心板是联发科的MT7628

- 连接开发板的两种方式
@1：用mini USB线连接，内嵌了转串口，可直接当串口使用。
工具：Linux下minicom，windows下secure CRT等。

@2：用网线远程登录
工具：Linux下ssh登录，例如：ssh 用户名@开发板的IP 回车之后输入用户名密码
Windows下secure CRT等。用ssh2连接


- python 配置cgi
cd /etc/apache2/
vim apache2.conf 添加如下内容：
ScriptAlias /cgi-bin/ /var/www/cgi-bin/
<Directory "/var/www/cgi-bin">
	AllowOverride None
	Options +ExecCGI
	Order allow,deny
	Allow from all
</Directory>
AddHandler cgi-script .cgi .pl .py
保存退出
接下来我们还需要配置cgi文件
mods-enabled/mime.load进入此文件，添加如下代码
LoadModule cgi_module /usr/lib/apache2/modules/mod_cgi.so


64为系统安装交叉编译工具(32bit)
1.配置没问题，但是用交叉编译工具编译的时候出现
bash: /usr/local/toolschain/mips/bin/mipsel-linux-gcc: No such file or directory
表示没有安装支持32bit的库。
debian 
apt-get install lib32z1 lib32ncurses5
然后
/usr/local/toolschain/mips/bin/../libexec/gcc/mipsel-buildroot-linux-uclibc/4.6.3/cc1: error while loading shared libraries: libmpc.so.3: cannot open shared object file: No such file or directory

出现这类错误表示，系统不知道xxx.so放在哪个目录下，这时候就要在/etc/ld.so.conf中加入xxx.so所在的目录。

一般而言，有很多的so会存放在/usr/local/lib这个目录底下，去这个目录底下找，果然发现自己所需要的.so文件。

所以，在/etc/ld.so.conf中加入/usr/local/lib这一行，保存之后，再运行：/sbin/ldconfig –v更新一下配置即可。

方法1：

编辑/etc/ld.so.conf文件，在新的一行中加入库文件所在目录；

运行ldconfig，以更新/etc/ld.so.cache文件；
方法2：

在/etc/ld.so.conf.d/目录下新建任何以.conf为后缀的文件，在该文件中加入库文件所在的目录；

运行ldconfig，以更新/etc/ld.so.cache文件；


本人觉得第二种办法更为方便，对于原系统的改动最小。因为/etc/ld.so.conf文件的内容是include /etc/ld.so.conf.d/*.conf
所以，在/etc/ld.so.conf.d/目录下加入的任何以.conf为后缀的文件都能被识别到。
本人的作法：  
1. 将所有的用户需要用到的库放到/usr/loca/lib；  
2. 在/etc/ld.so.conf.d/目录下新建文件usr-libs.conf，内容是：/usr/local/lib  
3. #sudo ldconfig  
ld.so.cache的更新是递增式的，就像PATH系统环境变量一样，不是从头重新建立，而是向上累加。
除非重新开机，才是从零开始建立ld.so.cache文件。
